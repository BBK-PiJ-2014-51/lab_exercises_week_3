//Distance point–to–point
//Write a program that reads the X and Y coordinates of three points and then outputs which of the three are closer. Use the following class to store the data for the points:
//class Point { double x;
//
//    double y; }

Point p1 = new Point();
Point p2 = new Point();
Point p3 = new Point();

println("Please enter the x coordinate of p1: ");
double coordinate = Double.parseDouble(System.console().readLine());
p1.x = coordinate;
println("Please enter the y coordinate of p1: ");
coordinate = Double.parseDouble(System.console().readLine());
p1.y = coordinate;

println("Please enter the x coordinate of p2: ");
coordinate = Double.parseDouble(System.console().readLine());
p2.x = coordinate;
println("Please enter the y coordinate of p2: ");
coordinate = Double.parseDouble(System.console().readLine());
p2.y = coordinate;

println("Please enter the x coordinate of p3: ");
coordinate = Double.parseDouble(System.console().readLine());
p3.x = coordinate;
println("Please enter the y coordinate of p3: ");
coordinate = Double.parseDouble(System.console().readLine());
p3.y = coordinate;

// 3 combinations - 1 & 2, or 1 & 3, or 2 & 3
double p1_p2_distance = PointHelper.getDistance(p1, p2);
double p1_p3_distance = PointHelper.getDistance(p1, p3);
double p2_p3_distance = PointHelper.getDistance(p2, p3);

print("The two closest points are: ");
if (p1_p2_distance <= p1_p3_distance && p1_p2_distance <= p2_p3_distance){
    println("1 and 2");
} else if (p1_p3_distance <= p1_p2_distance && p1_p3_distance <= p2_p3_distance){
    println("1 and 3");
} else if (p2_p3_distance <= p1_p2_distance && p2_p3_distance <= p1_p3_distance){
    println("2 and 3");
}

class Point {
    double x;
    double y;
}

class PointHelper{

    //returns distance between two cartesian points based on
    //the pythagorean theorem (a * a) + (b * b) = (c * c)
    public static double getDistance(Point p1, Point p2){
        double a = p1.x - p2.x;
        double b = p1.y - p2.y;
        
        return java.lang.Math.sqrt((a * a) + (b * b));
        
    }

}